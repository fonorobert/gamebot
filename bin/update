#!/bin/bash -e
update-git-and-install() {
  echo "Currently updating $(pwd)"

  # get provided target branch, if any
  targetBranch=$1

  # get current branch name
  currentBranch=`git rev-parse --abbrev-ref HEAD`

  # if no target branch was provided, make current branch the target branch
  if [ -z $targetBranch ]; then
    targetBranch=$currentBranch
  fi
  echo "with target branch $targetBranch"

  # get the current commit
  oldSHA=`git rev-parse HEAD`

  # if target branch is not `master`, delete it to avoid force-push issues
  if [ $targetBranch != "master" ]; then
    git checkout master
    if [[ `git branch --list $targetBranch` ]]; then
      git branch -D $targetBranch
    fi
  fi

  # get the remote
  git fetch origin
  git checkout $targetBranch
  echo "Now in branch $(git rev-parse --abbrev-ref HEAD)"

  # update local branch with remote branch
  git rebase origin/$targetBranch

  # get the new commit
  newSHA=`git rev-parse HEAD`

  # only run npm install if the dependencies have changed
  if git diff --name-only $oldSHA $newSHA | grep package.json; then
    npm install --production
  else
    echo "Dependencies look up-to-date; skipping 'npm install'"
  fi

  npm run build

}

update-all() {
  branch=$1

  BOT_DIR="$( cd "$( dirname "$0" )/.." && pwd )"
  cd $BOT_DIR

  update-git-and-install $branch
}

update-all $1
